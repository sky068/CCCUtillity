{"version":3,"sources":["RotateAction.js"],"names":["RotateAction","cc","Class","extends","ActionInterval","__ctor__","action","_elapsed","_innerAction","_innerTarget","initWithAction","errorID","clone","_cloneDecoration","startWithTarget","target","prototype","call","step","dt","prePos","getPosition","curPos","dis","subSelf","normalizeSelf","origin","v2","r","signAngle","angle","misc","radiansToDegrees","setInnerAction","getInnerAction","isDone","_duration","rotateAciton"],"mappings":";;;;;;AAAA;;;;;AAKA,IAAIA,eAAeC,GAAGC,KAAH,CAAS;AACxBC,aAASF,GAAGG,cADY;;AAGxBC,YAHwB,oBAGdC,MAHc,EAGN;AACd,aAAKC,QAAL,GAAgB,CAAhB;AACA,aAAKC,YAAL,GAAoB,IAApB;AACA,aAAKC,YAAL,GAAoB,IAApB;AACAH,kBAAU,KAAKI,cAAL,CAAoBJ,MAApB,CAAV;AACH,KARuB;AAUxBI,kBAVwB,0BAURJ,MAVQ,EAUA;AACpB,YAAI,CAACA,MAAL,EAAa;AACTL,eAAGU,OAAH,CAAW,IAAX;AACA,mBAAO,KAAP;AACH;;AAED,aAAKH,YAAL,GAAoBF,MAApB;AACA,eAAO,IAAP;AACH,KAlBuB;AAoBxBM,SApBwB,mBAoBf;AACL,YAAIN,SAAS,IAAIN,YAAJ,EAAb;AACA,aAAKa,gBAAL,CAAsBP,MAAtB;AACAA,eAAOI,cAAP,CAAsB,KAAKF,YAAL,CAAkBI,KAAlB,EAAtB;AACA,eAAON,MAAP;AACH,KAzBuB;AA2BxBQ,mBA3BwB,2BA2BPC,MA3BO,EA2BC;AACrB,aAAKN,YAAL,GAAoBM,MAApB;AACAd,WAAGG,cAAH,CAAkBY,SAAlB,CAA4BF,eAA5B,CAA4CG,IAA5C,CAAiD,IAAjD,EAAuDF,MAAvD;AACA,aAAKP,YAAL,CAAkBM,eAAlB,CAAkCC,MAAlC;AACH,KA/BuB;AAiCxBG,QAjCwB,gBAiClBC,EAjCkB,EAiCd;AACN,YAAIC,SAAS,KAAKX,YAAL,CAAkBY,WAAlB,EAAb;AACA,aAAKb,YAAL,CAAkBU,IAAlB,CAAuBC,EAAvB;AACA,YAAIG,SAAS,KAAKb,YAAL,CAAkBY,WAAlB,EAAb;;AAEA;AACA,YAAIE,MAAMD,OAAOE,OAAP,CAAeJ,MAAf,CAAV;AACAG,cAAMA,IAAIE,aAAJ,EAAN;AACA;AACA,YAAIC,SAASzB,GAAG0B,EAAH,CAAM,CAAN,EAAS,CAAT,CAAb;;AAEA,YAAIC,IAAIF,OAAOG,SAAP,CAAiBN,GAAjB,CAAR;AACA,YAAIO,QAAQ7B,GAAG8B,IAAH,CAAQC,gBAAR,CAAyBJ,CAAzB,CAAZ;AACA;AACA,aAAKnB,YAAL,CAAkBqB,KAAlB,GAA0BA,KAA1B;;AAEA,aAAKvB,QAAL,IAAiBY,EAAjB;AACH,KAlDuB;;;AAoDxB;;;;AAIAc,oBAAe,wBAAU3B,MAAV,EAAkB;AAC7B,YAAI,KAAKE,YAAL,KAAsBF,MAA1B,EAAkC;AAC9B,iBAAKE,YAAL,GAAoBF,MAApB;AACH;AACJ,KA5DuB;;AA8DxB;;;;AAIA4B,oBAAe,0BAAY;AACvB,eAAO,KAAK1B,YAAZ;AACH,KApEuB;;AAsExB2B,YAAO,kBAAY;AACf,eAAQ,KAAK5B,QAAL,IAAiB,KAAKC,YAAL,CAAkB4B,SAA3C;AACH;AAxEuB,CAAT,CAAnB;;AA2EA;;;;;AAKAnC,GAAGoC,YAAH,GAAkB,UAAU/B,MAAV,EAAkB;AAChC,WAAO,IAAIN,YAAJ,CAAiBM,MAAjB,CAAP;AACH,CAFD","file":"RotateAction.js","sourceRoot":"../../../../assets/Script","sourcesContent":["/**\n * Created by xujiawei on 2020-03-13 12:08:52\n * 包装动作，用来包装move，besizer等动作, 用来在执行动作过程中更新节点角度\n */\n\nlet RotateAction = cc.Class({\n    extends: cc.ActionInterval,\n\n    __ctor__ (action) {\n        this._elapsed = 0;\n        this._innerAction = null;\n        this._innerTarget = null;\n        action && this.initWithAction(action);\n    },\n\n    initWithAction (action) {\n        if (!action) {\n            cc.errorID(1026);\n            return false;\n        }\n\n        this._innerAction = action;\n        return true;\n    },\n\n    clone () {\n        let action = new RotateAction();\n        this._cloneDecoration(action);\n        action.initWithAction(this._innerAction.clone());\n        return action;\n    },\n\n    startWithTarget (target) {\n        this._innerTarget = target;\n        cc.ActionInterval.prototype.startWithTarget.call(this, target);\n        this._innerAction.startWithTarget(target);\n    },\n\n    step (dt) {\n        let prePos = this._innerTarget.getPosition();\n        this._innerAction.step(dt);\n        let curPos = this._innerTarget.getPosition();\n        \n        // 更新角度\n        let dis = curPos.subSelf(prePos);\n        dis = dis.normalizeSelf();\n        // 默认方向为（0，1）即y轴朝上为0度\n        let origin = cc.v2(0, 1);\n\n        let r = origin.signAngle(dis);\n        let angle = cc.misc.radiansToDegrees(r);\n        // cc.log(\"angle:\", angle);\n        this._innerTarget.angle = angle;\n\n        this._elapsed += dt;\n    },\n\n    /*\n     * Set inner action.\n     * @param {ActionInterval} action\n     */\n    setInnerAction:function (action) {\n        if (this._innerAction !== action) {\n            this._innerAction = action;\n        }\n    },\n\n    /*\n     * Get inner action.\n     * @return {ActionInterval}\n     */\n    getInnerAction:function () {\n        return this._innerAction;\n    },\n\n    isDone:function () {\n        return (this._elapsed >= this._innerAction._duration);\n    },\n});\n\n/**\n * @method rotateAciton\n * @param {ActionInterval} action\n * @return {ActionInterval}\n */\ncc.rotateAciton = function (action) {\n    return new RotateAction(action);\n}"]}